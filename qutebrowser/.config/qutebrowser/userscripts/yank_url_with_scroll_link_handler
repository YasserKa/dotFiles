#!/usr/bin/env bash
# Dependencies yq

# Store a link_handler link that opens a web page in a certain scroll position

encode_url() {
  # Reliable localization
  local LC_ALL=C
  # Go through each character
  for (( i = 0; i < ${#1}; i++ )); do
    : "${1:i:1}"
    case "$_" in
      # Keep allowed characters
      [a-zA-Z0-9.~_-]) printf '%s' "$_" ;;
      # Encode disallowed characters
      *) printf '%%%02X' "'$_" ;;
    esac
  done
  printf '\n'
}

# Save a session to have an up to date information about the web page
# (i.e. the scroll position)
session_name="link_handler"
echo ":session-save --quiet $session_name" >> "$QUTE_FIFO"

session_path="${QUTE_DATA_DIR}/sessions/${session_name}.yml"
 # Configuring qutebrowser - qutebrowser

y_scroll="$(yq ".windows[].tabs[] | select (.active == true) | .history[] | select (.active == true and .title == \"$QUTE_TITLE\" and .url == \"$QUTE_URL\") | .\"scroll-pos\".y" "$session_path")"

# Qutebrowser command that scrolls to $y_scroll after a 500 delay

# Open the page
pre_qutebrowser_command="qutebrowser ${QUTE_URL@Q}"
# Wait until the page is loaded
# Qutebrowser's WM_NAME changes to the page's title with "- qutebrowser" as a postfix
# xdotool is used to wait until a window with such properties exist
xdotool_command="xdotool search --sync --name \"^${QUTE_TITLE} - qutebrowser$\""
# Scroll to the position
post_qutebrowser_command="qutebrowser \":scroll-px 0 $y_scroll\""
cmd="$pre_qutebrowser_command && $xdotool_command && $post_qutebrowser_command"

encoded_command="$(encode_url "$cmd")"
link_handler_url="[[link-handler://${encoded_command}][$QUTE_TITLE, scroll 0 $y_scroll]]"

echo "$link_handler_url" | xclip -selection clipboard

echo "message-info 'yanked link handler URL'" >> "$QUTE_FIFO"
