#!/usr/bin/env bash

declare -A MAN_ARR=(
	[bash]='https://www.gnu.org/s/bash/manual/bash.pdf bash_manual.pdf bash'
	[org]='https://orgmode.org/org.pdf org_manual.pdf emacs'
	[elisp]='https://www.gnu.org/software/emacs/manual/pdf/elisp.pdf elisp_manual.pdf emacs'
	[refcard]='https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf refcard.pdf emacs'
)

declare -r ROOT_DIR="$HOME/Documents/Books"

download_man_page() {
	MAN_URL="$1"
	# Bash for bash manual
	MAN_NAME="$2"
	PARENT_DIR="$3"

	# Find the path for the parent directory
	PARENT_DIR_ABS_PATH="$(fd --absolute-path --type d --base-directory="$ROOT_DIR" -- "$PARENT_DIR")"
	ABS_PATH="$PARENT_DIR_ABS_PATH$MAN_NAME"

	wget --quiet --output-document="/tmp/$MAN_NAME.new" -- "$MAN_URL"

	if [[ -f "$ABS_PATH" ]]; then
		DOWNLOADED_HASH=$(md5sum "/tmp/$MAN_NAME.new" | awk '{print $1}')
		CURRENT_HASH=$(md5sum "$ABS_PATH" | awk '{print $1}')
		if [[ "$CURRENT_HASH" != "$DOWNLOADED_HASH" ]]; then

			cp "$ABS_PATH" "/tmp/$MAN_NAME.old"
			[[ $(dunstify --timeout=60000 "A manual got updates" "There's a new manual for $MAN_NAME" --action="action,label") == "action" ]] &&
				diff-pdf --view -- "/tmp/$MAN_NAME.old" "/tmp/$MAN_NAME.new" &
			disown
		fi
	fi

	cp --force "/tmp/$MAN_NAME.new" "$ABS_PATH"
}

main() {
	for MAN in "${!MAN_ARR[@]}"; do #

		read -ra namesArray <<<"${MAN_ARR[$MAN]}"
		download_man_page "${namesArray[@]}"
	done
}

main
