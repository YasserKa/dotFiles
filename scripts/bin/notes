#!/bin/python3
from rofi import Rofi
from sys import argv
from time import sleep
import os
import subprocess


PATH_TO_NOTES = f"{os.environ['HOME']}/notes/latex"
BOOKS_PATH = f"{os.environ['HOME']}/books"

CURRENT_NOTES = [
    "paul_calculus_I",
    "how_linux_works",
]


def main():
    # initiate rofi
    r = Rofi()

    options = get_notes()
    index, _ = r.select('notes', options,)
    if index == -1:
        exit()

    # get picked notes
    notes_picked = options[index]
    notes_directory = f"{PATH_TO_NOTES}/{notes_picked}"

    # open book
    files_name = os.listdir(notes_directory)
    book_exists = any(
        [file_name.endswith('.pdf') for file_name in files_name])

    if book_exists:
        subprocess.run(
            f"zathura {notes_directory}/*pdf &> /dev/null &", shell=True)

    sleep(1.5)

    # adjusting workspace
    if book_exists:
        for file_name in files_name:
            if file_name.endswith(('.pdf')):
                file_name = file_name.replace("(", "\\(")
                file_name = file_name.replace(")", "\\)")
                subprocess.run(
                    "i3-msg '[title=\"" + file_name +
                    "\"] move --no-auto-back-and-forth workspace 2'",
                    shell=True)

                subprocess.run(
                    "i3-msg 'workspace --no-auto-back-and-forth 2'", shell=True)

    subprocess.run(
        "i3-msg 'workspace --no-auto-back-and-forth 8'", shell=True)

    subprocess.run(
        f"alacritty --title {notes_picked} "
        f"--working-directory {notes_directory} "
        f"-e bash -c 'nvim \"+normal ,ll\" notes.tex && exec bash' 2> /dev/null & ", shell=True)

    sleep(2)
    subprocess.run(
        f"i3-msg '[title=\"{notes_picked}\"] move right'", shell=True)


    # kill the process if it already exists
    process = subprocess.run(
        ["xdotool", "search", "--name", f"^{notes_picked}$", 'getwindowpid'],
        capture_output=True, text=True).stdout

    process = process.strip()
    if process != '':
        subprocess.run(["kill", process])


# TODO: courses jupyter notebook
# case $course in
#     introduction_to_datascience)
#         pkill jupyter-notebook *
#         xdotool type --window $course_id notebook lecture_notes/lectures --no-browser --port 8821
#         xdotool key - -window $course_id Return
#         qutebrowser - -target window http: // 127.0.0.1: 8821/tree; ;
# esac

def get_notes():
    notes = ['Something went wrong']

    if len(argv) > 1 and argv[1] == 'curr':
        notes = CURRENT_NOTES
    else:
        try:
            notes = os.listdir(PATH_TO_NOTES)
        except FileNotFoundError:
            os.makedirs(PATH_TO_NOTES)
            notes = os.listdir(PATH_TO_NOTES)

    return notes


if __name__ == '__main__':
    main()
