# http://i3wm.org/dcs/userguide.html
# vim:nospell:foldmarker=<<<,>>>
# Gaps <<<
for_window [all] border pixel 0

gaps inner 5
gaps outer 5
# >>>
# Workspaces <<<
set $mod Mod4

font pango:Inconsolata 14
default_orientation auto

# Change focus
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+h focus left

# Move focused window
# There's a bug in i3 that doesn't focus the container after it moves to another
# screen, this script centers the mouse to the moved window mitigating the bug
# The reason for the bug is that the mouse is placed ontop of the container
# that's not being moved from one workspace to another
bindsym $mod+Shift+j exec --no-startup-id $XDG_CONFIG_HOME/i3/i3-center-cursor-on-window.sh move down
bindsym $mod+Shift+k exec --no-startup-id $XDG_CONFIG_HOME/i3/i3-center-cursor-on-window.sh move up
bindsym $mod+Shift+l exec --no-startup-id $XDG_CONFIG_HOME/i3/i3-center-cursor-on-window.sh move right
bindsym $mod+Shift+h exec --no-startup-id $XDG_CONFIG_HOME/i3/i3-center-cursor-on-window.sh move left

# Split in horizontal orientation
bindsym $mod+v split h

# Split in vertical orientation
bindsym $mod+Shift+v split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Worspaces
set $browser 1
set $coding 2
set $notes 3
set $git 4
set $video 5
set $wp6 6
set $social 7
set $documents 8
set $wp9 9
set $wp0 0

# Workspaces on specific screens
set $monitor_primary eDP-1
set $monitor_left DVI-I-2-2
set $monitor_right DVI-I-1-1

workspace $browser output $monitor_primary
workspace $coding output $monitor_primary
workspace $notes output $monitor_primary
workspace $video output $monitor_primary
workspace $documents output $monitor_primary

workspace $git output $monitor_right

workspace $wp6 output $monitor_left
workspace $wp9 output $monitor_left
workspace $social output $monitor_left

# Bindsym using mod+# to workspace #
bindsym $mod+1 workspace $browser
bindsym $mod+2 workspace $coding
bindsym $mod+3 workspace $notes
bindsym $mod+4 workspace $git
bindsym $mod+5 workspace $video
bindsym $mod+6 workspace $wp6
bindsym $mod+7 workspace $social
bindsym $mod+8 workspace $documents
bindsym $mod+9 workspace $wp9
bindsym $mod+0 workspace $wp0

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $browser
bindsym $mod+Shift+2 move container to workspace $coding
bindsym $mod+Shift+3 move container to workspace $notes
bindsym $mod+Shift+4 move container to workspace $git
bindsym $mod+Shift+5 move container to workspace $video
bindsym $mod+Shift+6 move container to workspace $wp6
bindsym $mod+Shift+7 move container to workspace $social
bindsym $mod+Shift+8 move container to workspace $documents
bindsym $mod+Shift+9 move container to workspace $wp9
bindsym $mod+Shift+0 move container to workspace $wp0
bindsym $mod+Shift+z move container to workspace back_and_forth

# Go back and forth
workspace_auto_back_and_forth yes

bindsym $mod+z workspace back_and_forth
bindsym $mod+Shift+minus move scratchpad

# Opening softwares to a default workspaces
assign [title="^emacs_org_name$"] workspace $notes
assign [title="^magit_name$"] workspace $git
assign [title="^rc_magit_title$"] workspace $git
assign [class="Slack"] workspace $social
assign [class="Zathura"] workspace $documents
assign [class="Chromium"] workspace $wp9

# For notify-me script
for_window [instance="notify_me_profile"] move scratchpad
for_window [instance="facebook_bot_profile"] move scratchpad

# Firefox (For ambient music page)
for_window [class="firefox"] move scratchpad

# Making softwares in floating mode
for_window [class="Vlc|feh|Shutter"] floating enable

# Enable floating for windows that has floating class
for_window [instance="floating"] floating enable

# Change workspace when window is activated (used for qutebrowser gt)
include ./focus_on_window_activation_config
# >>>
# Modes <<<

# Resize window
bindsym $mod+r mode "resize"
mode "resize" {
    bindsym h resize shrink width 10 px or 10 ppt;
    bindsym j resize grow height 10 px or 10 ppt;
    bindsym k resize shrink height 10 px or 10 ppt;
    bindsym l resize grow width 10 px or 10 ppt;

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

# Emacs org clock
set $clock_mode "clock (i)n, (o)ut, (c)ancel, (t)oggle, (g)o_to"
bindsym $mod+q mode $clock_mode
mode $clock_mode {
    bindsym i exec --no-startup-id $XDG_CONFIG_HOME/polybar/org_clock clock_in; mode "default";
    bindsym o exec --no-startup-id $XDG_CONFIG_HOME/polybar/org_clock clock_out; mode "default";
    bindsym c exec --no-startup-id $XDG_CONFIG_HOME/polybar/org_clock clock_cancel; mode "default";
    bindsym t exec --no-startup-id $XDG_CONFIG_HOME/polybar/org_clock clock_toggle; mode "default";
    bindsym g exec --no-startup-id $XDG_CONFIG_HOME/polybar/org_clock go_to_item; mode "default";

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

# Music player
set $cmus_mode "(i)nfo, (t)oggle, (n)next, (p)revious, (h)igher, (l)ower"
bindsym $mod+c mode $cmus_mode
mode $cmus_mode {
    bindsym i exec --no-startup-id $XDG_CONFIG_HOME/cmus/cmus_notification; mode "default";
    bindsym t exec --no-startup-id cmus-remote --pause; mode "default";
    bindsym n exec --no-startup-id cmus-remote --next; mode "default";
    bindsym p exec --no-startup-id cmus-remote --prev; mode "default";

    bindsym h exec --no-startup-id cmus-remote --volume +2%;
    bindsym l exec --no-startup-id cmus-remote --volume -2%;

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

set $control_ambient_mode "(t)oggle, (h)igher, (l)ower"
bindsym $mod+Shift+c mode $control_ambient_mode
mode $control_ambient_mode {
    bindsym t exec --no-startup-id $HOME/bin/control_ambient p; mode "default";

    bindsym h exec --no-startup-id $HOME/bin/control_ambient k;
    bindsym l exec --no-startup-id $HOME/bin/control_ambient j;

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

set $sharing_mode "(i)mage, (c)lipbaord, (v)ideo, (t)ext, (n)ote"
bindsym $mod+s mode $sharing_mode
mode $sharing_mode {
    bindsym i exec --no-startup-id $HOME/bin/share -i; mode "default";
    bindsym c exec --no-startup-id $HOME/bin/share -c; mode "default";
    bindsym v exec --no-startup-id $HOME/bin/share -v; mode "default";
    bindsym t exec --no-startup-id $HOME/bin/share -t; mode "default";
    bindsym n exec --no-startup-id $HOME/bin/share -n; mode "default";

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

set $utility_mode "(l)ights off, (m)ail, (a)udio, (d)ictionary, (u)sb unmount"
bindsym $mod+u mode $utility_mode
mode $utility_mode {
# Unmount all storage devices;
    bindsym u exec --no-startup-id udiskie-umount -a; mode "default";

# Switch off light
    bindsym l exec --no-startup-id "sleep 0.5; xset dpms force off"; mode "default";

    bindsym a exec --no-startup-id switch_audio_sink; mode "default";
    bindsym d exec --no-startup-id search_dictionary; mode "default";

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

set $mail_mode "mail (o)pen, (s)ync, (c)lear"
bindsym $mod+m mode $mail_mode
mode $mail_mode {
    bindsym o exec --no-startup-id bash -ic "open_cli neomutt"; mode "default";
    bindsym s exec --no-startup-id bash -ic "mailsync gmail trigger-polybar"; mode "default";
    # Mark messages as read
    bindsym c exec --no-startup-id mv $XDG_DATA_HOME/mail/gmail/INBOX/new/* \
            $XDG_DATA_HOME/mail/gmail/INBOX/cur/ \
            && polybar-msg action "#mail.hook.0"; mode "default";
    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default";
}

set $system_mode "system (l) lock, (e) logout, (s) reload i3, (r) restart i3, (Shift+r) reboot, (Shift+s) shutdown"
bindsym $mod+x mode $system_mode
mode $system_mode {
    bindsym l exec --no-startup-id i3lock --color 000000, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id i3-msg reload, mode "default"
    bindsym r exec --no-startup-id i3-msg restart, mode "default"

    bindsym Shift+r exec --no-startup-id bash -ic reboot, mode "default"
    bindsym Shift+s exec --no-startup-id bash -ic shutdown, mode "default"

    bindsym Control+bracketleft mode "default";
    bindsym Escape mode "default"
}

# >>>
# Bindings <<<
bindsym $mod+Return exec --no-startup-id $TERMINAL
bindsym $mod+Shift+q kill
bindsym $mod+d exec --no-startup-id rofi -show run

# Password
bindsym $mod+p exec --no-startup-id $XDG_CONFIG_HOME/rofi/bwmenu

# Tmux
bindsym $mod+t exec --no-startup-id rofi -show tmux -modi tmux:$XDG_CONFIG_HOME/rofi/rofi-tmux

# Documents
bindsym $mod+Shift+d exec --no-startup-id $XDG_CONFIG_HOME/rofi/rofi-documents

# Don't show general notes
bindsym $mod+n exec --no-startup-id $HOME/bin/open_general_notes
# Show any window besides general notes
bindsym $mod+minus [class="^(?!.*_notes).*$"] scratchpad show

# Put general notes in scratchpad
for_window [class="^general_notes$"] move scratchpad, floating enable, move position center, resize set 990 820

# note taking
bindsym $mod+e exec --no-startup-id $HOME/bin/create_note "org_protocol"
bindsym $mod+Shift+n exec --no-startup-id $HOME/bin/create_note "tex"

for_window [class="^tmp_"] move scratchpad, floating enable, move position center, resize set 800 400
# >>>
# Startup <<<
# Fetch email
exec --no-startup-id $HOME/bin/wait_internet && check_mail

# Pick a random background image
exec_always --no-startup-id feh --bg-scale `find $HOME/Pictures/WallPapers/. -type f | shuf -n1`

# Composer for fading affect on window focus and opacity
exec --no-startup-id "picom --experimental-backends & disown"

# Status bar
exec_always --no-startup-id $XDG_CONFIG_HOME/polybar/launch

exec --no-startup-id bash -ic org
# >>>
