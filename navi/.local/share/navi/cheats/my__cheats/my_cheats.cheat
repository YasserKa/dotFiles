# https://github.com/denisidoro/navi/blob/master/docs/cheatsheet_syntax.md
# Comment lenght should be at most min_width (55), since truncated text wont be searchable
# https://github.com/denisidoro/navi/issues/459
% Pacman/Paru

$pkg-local: pacman --query --explicit --quiet
$pkg-remote: pacman --sync --list --quiet

# Display files provided by a remote pkg
pacman -Fl <pkg-remote>

# Display files provided by a local pkg
pacman -Ql <pkg-local>

# Search for pkgs that contains a specific file
pkgfile --search --verbose <file>

# Search for local pkgs that contains a specific file
pacman --query --owns <file>

# Downgrade pkg
sudo pacman -U <pkg>
$pkg: ls /var/cache/pacman/pkg/*zst

# Remove not installed AUR pkgs from cache
paru -Scad

# Remove not installed Official pkgs from cache
sudo pacman -Sc

# Remove all AUR pkgs from cache
paru -Sccad

# Remove all Official pkgs from cache
sudo pacman -Scc

% Systemd

# List user started timers
systemctl list-timers --user

% Code patches

# Create patch
diff -u <old> <new> > patch.patch
$old: fd 
$new: fd 

# Apply patch
patch <code> <patch>
$code: fd 
$patch: fd 

% Zsh
# Start without rc
zsh -d -f -i

% Others

# Download youtube playlist's audio
yt-dlp --download-archive "$HOME/Music/archive" --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 10 --output "$HOME/Music/%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" --yes-playlist "<playlist>"

# Download youtube playlist's audio, splitting chapters
yt-dlp --split-chapters --download-archive "$HOME/Music/archive" --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 10 --output "$HOME/Music/%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" --yes-playlist "<playlist>"

# Download youtube video's audio
yt-dlp --download-archive "$HOME/Music/archive" --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 10 --output "$HOME/Music/%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" --no-playlist "<link>"

# Download youtube video's audio, splitting chapters
yt-dlp --split-chapters --download-archive "$HOME/Music/archive" --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 10 --output "$HOME/Music/%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" --no-playlist "<link>"

# Share kde file
kdeconnect-cli -n "<device>" --share "<file>"

$device: kdeconnect-cli -a --name-only
$file: fd 

# Bluetooth GUI
blueman-manager

# Android device mount
mkdir "$HOME/mnt" && aft-mtp-mount "$HOME/mnt"

# Pick dirty files to open in $EDITOR
$EDITOR <dirty_files>

$dirty_files: cat <(git diff --name-only) <(git diff --name-only --staged) <(git ls-files -o --exclude-standard) | xargs -I{} echo $(git rev-parse --show-toplevel)/{} --- --multi --expand

# Diff the output of two commands
diff <(<cmd1>) <(<cmd2>)

# Fancy diff the output of two commands
diff -u <(<cmd1>) <(<cmd2>) | delta

# Backup
rsync -a --no-links --progress --delete --exclude="paru" --exclude="Slack" --exclude="chromium" --exclude=".cache" --exclude="Music" --exclude="VirtualBox" $HOME /run/media/yasser/YASSER/backup; alert_last

# Unlock locked user
faillock --user <user> --reset

# Rerun a command until it succeeds
until <cmd>; do echo "Restarting" && sleep 1; done

# Generate an SSH Key https://blog.g3rt.nl/upgrade-your-ssh-keys.html
ssh-keygen -o -a 100 -t ed25519

# Convert MOBI to PDF
ebook-convert "<file>" "<file_name>.pdf"

$file: fd
$file_name: echo ${file%.mobi}

# Merge PDF files
pdfunite <in_files> "<out_file>.pdf"
$in_files: fd --regex '.*.pdf' --- --multi --expand
$out_file:

# vim:ft=bash
