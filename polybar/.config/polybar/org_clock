#!/usr/bin/env sh

# Dependencies: Emacs for org mode & wmctrl to focus window
# Use org mode's clocking in emacs with rofi to navigate and use clock
# operations


TMP_FILE_PATH="/tmp/org_current_task"

function go_to_item () {
    [[ ! -e $TMP_FILE_PATH ]] && dunstify "No item is clocked in" && return

    CURSOR=$(sed "4q;d" $TMP_FILE_PATH | grep -o '[0-9]*')

    FULL_PATH=$(tail -1 $TMP_FILE_PATH)

    # Focus window
    wmctrl -xa emacs-org-mode

    emacsclient "+$CURSOR" "$FULL_PATH"
}

function clock_in () {
    emacsclient -e "(org-clock-in-last)"
}

function clock_out () {
    emacsclient -e "(org-clock-out)"
}

function clock_toggle () {
    emacsclient -e "(my/org-toggle-last-clock t)"
}

function clock_cancel () {
    emacsclient -e "(org-clock-cancel)"
}


function get_time_spent () {
    [[ ! -e $TMP_FILE_PATH ]] && echo "" && return

    INFORMATION=$(head -3 $TMP_FILE_PATH | tail -1)
    CLOCK_TIME=$(head -2 $TMP_FILE_PATH | tail -1)

    TIME_SINCE_CREATION=$(echo $((${CLOCK_TIME##*:} + $(($(date +%s) - $(date +%s -r $TMP_FILE_PATH)))/60)))

    echo "$TIME_SINCE_CREATION -$INFORMATION "
}

case "$1" in
  "clock_in") clock_in ;;
  "clock_out") clock_out ;;
  "clock_toggle") clock_toggle ;;
  "clock_cancel") clock_cancel ;;
  "go_to_item") go_to_item ;;
  "get_time_spent") get_time_spent ;;
  *) echo "$1 is a wrong argument" ;;
esac
