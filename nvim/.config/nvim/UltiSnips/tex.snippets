global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and y != '0'
endglobal


snippet "template" "template" br
\documentclass[12pt]{article}
\input{$HOME/.config/latex/preamble.tex}
% Variables
\newcommand{\documentTitle}{$1}

\begin{document}

\begin{titlepage}
	\begin{center}
		\vspace*{1cm}

		\LARGE
		\textbf{\documentTitle}

		\vspace{0.5cm}

		\vspace{1.5cm}

		\large
		\textbf{Yasser Kaddoura}

		\vfill
	\end{center}
\end{titlepage}
$2
\end{document}
endsnippet

snippet "be(gin)?( (\S+))?" "begin{} / end{}" br
\begin{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "something"`}}
	${2:${VISUAL}}
\end{$1}$0
endsnippet

snippet sec* "section" i
\section*{${VISUAL}$1}$0
endsnippet

snippet it "italic" i
\\textit{${VISUAL}$1}$0
endsnippet

snippet bf "boldface" i
\\textbf{${VISUAL}$1}$0
endsnippet


priority 10
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

snippet Hfig "figure H" bA
\begin{figure}[H]
	\centering
	\includegraphics[width=0.8\linewidth]{$0}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\hline
	\end{tabular}
\end{table}
endsnippet

snippet dm "Math" wA
\[
	$1
\] $0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet


snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet {} "left{ right}" iA
\left{ ${1:${VISUAL}} \right} $0
endsnippet

context "math()"
snippet [] "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet b[] "big left[ right]" iA
\bigl[ ${1:${VISUAL}} \bigr] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet


# CONVERT
context "math()"
snippet | "mid" iA
\mid $0
endsnippet

context "math()"
snippet .= "dot equal" iA
\doteq $0
endsnippet

context "math()"
snippet <- "left arrow" iA
\leftarrow $0
endsnippet

context "math()"
snippet -> "right arrow" iA
\rightarrow $0
endsnippet

context "math()"
snippet ... "ldots" iA
\ldots $0
endsnippet

context "math()"
snippet <= "leq" iA
\le
endsnippet

context "math()"
snippet >= "geq" iA
\ge
endsnippet

context "math()"
snippet != "not equal" iA
\not=
endsnippet

context "math()"
snippet =. "dot equal" iA
\doteq
endsnippet

context "math()"
snippet +- "plus minus" iA
\pm
endsnippet

context "math()"
snippet => "implies" iA
\implies
endsnippet

context "math()"
snippet _- "underline" i
\underline{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet -- "overline" i
\overline{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet _} "underbrace" i
\underbrace{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet -} "overbrace" i
\overbrace{${1:${VISUAL:over}}}$0
endsnippet

context "math()"
snippet _s "underset" i
\underset{${2:under}}{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet -s "overset" i
\overset{${2:over}}{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet array "overset" i
\left\\{ \begin{array}{cl}
$1 & $2 \\\\
$3 & $4
\end{array} \right.
endsnippet

snippet ga "overset" i
\begin{gather*}
	$0
\end{gather*}
endsnippet
