#!/bin/bash


target_img_dir="$HOME/Pictures/Shareables"
target_vid_dir="$HOME/Videos/Shareables"
target_path="$HOME"

# remove all media from desktop if exists
rm -f $target_path/Screen\ Capture*

mkdir -p $target_img_dir
mkdir -p $target_vid_dir

# returns the path for the course
function lecture_note_path(){
    # note lectures
    university_courses="$HOME/university/courses"
    course=$(exa -l $university_courses | awk -F' ' '{print $NF}' | rofi -dmenu)
    note_dir="$university_courses/$course/personal_notes/images"
    mkdir -p $note_dir
    echo $note_dir
}

case $1 in
    -v | -i) deepin-screen-recorder --save-path $target_path;;
    -l) target_path=$(lecture_note_path)
        deepin-screen-recorder --save-path $target_path
        old_file_name=`ls $target_path | grep -i Screen\ Capture`
        extension="${old_file_name##*.}"

        old_path="$target_path/$old_file_name"
        new_file_name="$(date +"%Y-%m-%d_%T").$extension"
        new_path="$target_path/$new_file_name"
        mv "$old_path" "$new_path"
        dunstify "Saved as $new_file_name" ;exit ;;
    -t)  xclip -o -selection clipboard | gist -p | xclip -selection clipboard
        dunstify "Saved to Clipboard" ;exit ;;
esac



arg=$1
date=`date +"%Y-%m-%d_%T"`
file_name=`ls $target_path | grep -i Screen\ Capture`
old_path="$target_path/$file_name"

extension="${file_name##*.}"

if [[ "$extension" == "" ]]; then
    exit
fi

# update target path depending on media type
case $extension in
    png | jpg | bmp) target_path=$target_img_dir;;
    mp4 | gif | mkv) target_path=$target_vid_dir;;
esac

new_name="$date.$extension"

new_path="$target_path/$new_name"

mv "$old_path" "$new_path"

if [[ "$extension" == "gif" ]]; then
    arg='-i'
fi

imgur-screenshot $new_path
dunstify "Saved to Clipboard"
