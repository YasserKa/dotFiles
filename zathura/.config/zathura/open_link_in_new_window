#!/usr/bin/env bash
#
# A zathura script to open a link in another window
# It opens another zathura instance if one doesn't exist already then move it to the right monitor
#
# Dependencies: zathura xdotool i3 xclip/wl-copy

# How it works:
# Given: Zathura is able to store a link's page number in the clipboard
# Steps:
# - Store current clipboard
# - copy link's page number to clipboard
# - if Zathura has another instance opening the same file
#   - goto page in opened instance
#   - else, open page in a new instance. Move it to righ output
# - Place back clipboard


main() {
  local -r file="$1"

  local page
  page="$(get_page_num)" || exit 1
  readonly page

  open_document "$file" "$page"
}

#######################################
# Pick a link and get number of page in zathura
#######################################
get_page_num() {
  copy_to_clipboard ""

  xdotool key "c"

  # Wait until the page number is copied  or the action is aborted
  wait_keys "<esc>" "<ctrl>+m"

  page="$(xclip -selection clipboard -o)"

  [[ ! $page =~ ^[0-9]+$ ]] && echo 'Page needs to be an integer' >&2  && exit 1

  # For some reason, zathura gives page-1
  page=$((page+1))

  xdotool keyup control
  # Clear zathura's message
  xdotool key --clearmodifiers Escape

  echo "$page"
}

#######################################
# Go to a page in an openned or new instance of zathura then move to right output
# Arguments:
#   1: file path
#   2: page number
#######################################
open_document() {
  local -r file="$1"
  local -r page="$2"

  focused_pid="$(xdotool getactivewindow getwindowpid)"
  # All pids using the file
  all_pids="$(xdotool search --name "^${file}$" getwindowpid %@)"

  other_pid="$(grep -v "$focused_pid" <(echo "$all_pids"))"
  if [[ -n "$other_pid" ]]; then
    busctl --user call "org.pwmt.zathura.PID-$other_pid" /org/pwmt/zathura org.pwmt.zathura GotoPage u "$((page-1))"
  else
    zathura --page="$page" "$file" & disown
    # Wait until the PID for the new instance is available
    while ! xdotool search --name "^${file}$" getwindowpid %@ | grep -v "$focused_pid"; do
      sleep 0.1
    done
    other_pid="$(xdotool search --name "^${file}$" getwindowpid %@  | grep -v "$focused_pid")"
    window_ids="$(xdotool search --pid "$other_pid")"
    for id in $window_ids; do
      i3-msg "[id=$id] move output right" 2>/dev/null
    done
    xdotool search --onlyvisible --pid "$other_pid" --class 'zathura' windowfocus
  fi
}


# Preserve clipboard during script
old_clipboard="$(xclip -selection clipboard -o)"
main "$@"
trap 'copy_to_clipboard $old_clipboard' EXIT
